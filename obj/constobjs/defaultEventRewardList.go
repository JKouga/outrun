package constobjs

import (
	"strconv"

	"github.com/RunnersRevival/outrun/enums"
	"github.com/RunnersRevival/outrun/obj"
)

var DefaultEventRewardList = func() []obj.EventReward {
	return []obj.EventReward{
		obj.NewEventReward(
			1,
			1,
			strconv.Itoa(int(enums.ChaoIDCartridge)),
			1,
		),
		obj.NewEventReward(
			2,
			500,
			strconv.Itoa(int(enums.ItemIDTrampoline)),
			3,
		),
		obj.NewEventReward(
			3,
			1000,
			strconv.Itoa(int(enums.ItemIDDrill)),
			3,
		),
		obj.NewEventReward(
			4,
			2000,
			strconv.Itoa(int(enums.ItemIDRedRing)),
			75,
		),
		obj.NewEventReward(
			5,
			3000,
			strconv.Itoa(int(enums.ItemIDBarrier)),
			3,
		),
		obj.NewEventReward(
			6,
			4000,
			strconv.Itoa(int(enums.ItemIDCombo)),
			2,
		),
		obj.NewEventReward(
			7,
			5000,
			strconv.Itoa(int(enums.ChaoIDGenesis)),
			1,
		),
		obj.NewEventReward(
			8,
			6000,
			strconv.Itoa(int(enums.ItemIDEnergy)),
			3,
		),
		obj.NewEventReward(
			9,
			7000,
			strconv.Itoa(int(enums.ItemIDAsteroid)),
			3,
		),
		obj.NewEventReward(
			10,
			8000,
			strconv.Itoa(int(enums.ItemIDMagnet)),
			3,
		),
		obj.NewEventReward(
			11,
			9000,
			strconv.Itoa(int(enums.ItemIDRedRing)),
			65,
		),
		obj.NewEventReward(
			12,
			10000,
			strconv.Itoa(int(enums.ItemIDLaser)),
			3,
		),
		obj.NewEventReward(
			13,
			12000,
			strconv.Itoa(int(enums.ItemIDRing)),
			15000,
		),
		obj.NewEventReward(
			14,
			14000,
			strconv.Itoa(int(enums.ItemIDInvincible)),
			2,
		),
		obj.NewEventReward(
			15,
			16000,
			strconv.Itoa(int(enums.ItemIDTrampoline)),
			2,
		),
		obj.NewEventReward(
			16,
			18000,
			strconv.Itoa(int(enums.ChaoIDGenesis)),
			1,
		),
		obj.NewEventReward(
			17,
			20000,
			strconv.Itoa(int(enums.ItemIDEnergy)),
			2,
		),
		obj.NewEventReward(
			18,
			23000,
			strconv.Itoa(int(enums.ItemIDDrill)),
			2,
		),
		obj.NewEventReward(
			19,
			26000,
			strconv.Itoa(int(enums.ItemIDBarrier)),
			2,
		),
		obj.NewEventReward(
			20,
			29000,
			strconv.Itoa(int(enums.ItemIDCombo)),
			2,
		),
		obj.NewEventReward(
			21,
			33000,
			strconv.Itoa(int(enums.ItemIDRedRing)),
			60,
		),
		obj.NewEventReward(
			22,
			37000,
			strconv.Itoa(int(enums.ItemIDAsteroid)),
			2,
		),
		obj.NewEventReward(
			23,
			42000,
			strconv.Itoa(int(enums.ItemIDRing)),
			20000,
		),
		obj.NewEventReward(
			24,
			47000,
			strconv.Itoa(int(enums.ItemIDMagnet)),
			2,
		),
		obj.NewEventReward(
			25,
			53000,
			strconv.Itoa(int(enums.ItemIDLaser)),
			2,
		),
		obj.NewEventReward(
			26,
			59000,
			strconv.Itoa(int(enums.ChaoIDDeathEgg)),
			1,
		),
		obj.NewEventReward(
			27,
			66000,
			strconv.Itoa(int(enums.ItemIDEnergy)),
			3,
		),
		obj.NewEventReward(
			28,
			73000,
			strconv.Itoa(int(enums.ItemIDInvincible)),
			3,
		),
		obj.NewEventReward(
			29,
			93000,
			strconv.Itoa(int(enums.ItemIDTrampoline)),
			3,
		),
		obj.NewEventReward(
			30,
			110000,
			strconv.Itoa(int(enums.ItemIDDrill)),
			3,
		),
		obj.NewEventReward(
			31,
			115000,
			strconv.Itoa(int(enums.ItemIDRedRing)),
			55,
		),
		obj.NewEventReward(
			32,
			120000,
			strconv.Itoa(int(enums.ItemIDBarrier)),
			3,
		),
		obj.NewEventReward(
			33,
			125000,
			strconv.Itoa(int(enums.ItemIDCombo)),
			3,
		),
		obj.NewEventReward(
			34,
			130000,
			strconv.Itoa(int(enums.ItemIDRing)),
			30000,
		),
		obj.NewEventReward(
			35,
			135000,
			strconv.Itoa(int(enums.ItemIDAsteroid)),
			3,
		),
		obj.NewEventReward(
			36,
			140000,
			strconv.Itoa(int(enums.ItemIDMagnet)),
			3,
		),
		obj.NewEventReward(
			37,
			150000,
			strconv.Itoa(int(enums.ChaoIDGenesis)),
			1,
		),
		obj.NewEventReward(
			38,
			160000,
			strconv.Itoa(int(enums.ItemIDEnergy)),
			3,
		),
		obj.NewEventReward(
			39,
			170000,
			strconv.Itoa(int(enums.ItemIDLaser)),
			3,
		),
		obj.NewEventReward(
			40,
			180000,
			strconv.Itoa(int(enums.ItemIDInvincible)),
			4,
		),
		obj.NewEventReward(
			41,
			190000,
			strconv.Itoa(int(enums.ItemIDTrampoline)),
			4,
		),
		obj.NewEventReward(
			42,
			200000,
			strconv.Itoa(int(enums.ItemIDRedRing)),
			50,
		),
		obj.NewEventReward(
			43,
			220000,
			strconv.Itoa(int(enums.ItemIDDrill)),
			4,
		),
		obj.NewEventReward(
			44,
			240000,
			strconv.Itoa(int(enums.ItemIDBarrier)),
			4,
		),
		obj.NewEventReward(
			45,
			260000,
			strconv.Itoa(int(enums.ItemIDRing)),
			40000,
		),
		obj.NewEventReward(
			46,
			280000,
			strconv.Itoa(int(enums.ItemIDCombo)),
			4,
		),
		obj.NewEventReward(
			47,
			300000,
			strconv.Itoa(int(enums.ChaoIDGenesis)),
			1,
		),
		obj.NewEventReward(
			48,
			340000,
			strconv.Itoa(int(enums.ItemIDEnergy)),
			3,
		),
		obj.NewEventReward(
			49,
			380000,
			strconv.Itoa(int(enums.ItemIDAsteroid)),
			4,
		),
		obj.NewEventReward(
			50,
			420000,
			strconv.Itoa(int(enums.ItemIDMagnet)),
			4,
		),
		obj.NewEventReward(
			51,
			460000,
			strconv.Itoa(int(enums.ItemIDRedRing)),
			45,
		),
		obj.NewEventReward(
			52,
			500000,
			strconv.Itoa(int(enums.ItemIDLaser)),
			4,
		),
		obj.NewEventReward(
			53,
			550000,
			strconv.Itoa(int(enums.ItemIDRing)),
			50000,
		),
		obj.NewEventReward(
			54,
			600000,
			strconv.Itoa(int(enums.ItemIDInvincible)),
			5,
		),
		obj.NewEventReward(
			55,
			650000,
			strconv.Itoa(int(enums.ItemIDTrampoline)),
			5,
		),
		obj.NewEventReward(
			56,
			700000,
			strconv.Itoa(int(enums.ItemIDRedRing)),
			45,
		),
		obj.NewEventReward(
			57,
			800000,
			strconv.Itoa(int(enums.IDRouletteTicketPremium)),
			5,
		),
		obj.NewEventReward(
			58,
			900000,
			strconv.Itoa(int(enums.IDRouletteTicketPremium)),
			10,
		),
		obj.NewEventReward(
			59,
			1000000,
			strconv.Itoa(int(enums.CharaTypeClassicSonic)),
			10,
		),
	}
}

func GetPendingEventRewards(oldParam, newParam int64) ([]obj.EventReward, int64) {
	rewards := DefaultEventRewardList()
	pendingRewards := []obj.EventReward{}
	oldParamRewardId := int64(8008135)
	highestRewardIdSoFar := int64(-1)
	for _, reward := range rewards {
		if highestRewardIdSoFar < reward.RewardID {
			highestRewardIdSoFar = reward.RewardID
		}
		if oldParam <= reward.Param {
			// found it!
			oldParamRewardId = reward.RewardID - 1
			break
		}
	}
	if oldParamRewardId == 8008135 {
		// apparently all rewards were already obtained!
		return pendingRewards, highestRewardIdSoFar
	}
	newParamRewardId := int64(8008135)
	for _, reward := range rewards {
		if highestRewardIdSoFar < reward.RewardID {
			highestRewardIdSoFar = reward.RewardID
		}
		if newParam <= reward.Param {
			// found it!
			newParamRewardId = reward.RewardID - 1
			break
		}
	}
	if newParamRewardId == 8008135 {
		newParamRewardId = highestRewardIdSoFar
	}
	for _, reward := range rewards {
		if reward.RewardID > oldParamRewardId && reward.RewardID <= newParamRewardId {
			pendingRewards = append(pendingRewards, reward)
		}
	}
	return pendingRewards, newParamRewardId
}
